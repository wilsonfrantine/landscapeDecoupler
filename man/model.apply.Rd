% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.apply.R
\name{model.apply}
\alias{model.apply}
\title{Apply any function over models}
\usage{
model.apply(fun, data, result_to = NULL)
}
\arguments{
\item{fun}{vector. The name of a function to be applied. Any function that can handle
model objects are allowed, specially tidy(), glance(), augment() from
broom, broom.mixed and broomExtra packages. Custom functions are also
allowed, but they have to be loaded in the environment space.}

\item{data}{a tibble. An output from \link{fitscales} function}

\item{result_to}{the new collumn name. It is optional. If null,
the new collumn name will be 'model.'+fun}
}
\description{
this function allow users to apply any function
over models nested in tibbles as the output of the \code{\link[=fitscales]{fitscales()}}
function. Users may use this function to retrieve model info,
as using summary, or apply their own personalized functions
over the models. The function will return a similar tibble
to the input table, but with an extra column with the result
of the function applied.
}
\details{
This function was designed to help users expanding the
possibility in handle data from model objects, specially for
those not covered by broom API. The package broom.mixed can
be used to handle mixed models. Users only need to install and
library the package, so the functions tidy, glance, and augment
will be also applied for packages like 'lme4' and others.
}
\examples{
\dontrun{
ls <- decouple(r,p,c(1000,2000,3000))
lsm <- calc_lsm(ls, c("pland","shdi"))
models <- fitscales(lsm, bio=euglossini, model="lm")
model.apply("summary",models, result_to="mod.summ")
}
}
\seealso{
\code{\link[=fitscales]{fitscales()}} \code{\link[=calc_lsm]{calc_lsm()}} \code{\link[=decouple]{decouple()}} \code{\link[=nestedscales]{nestedscales()}}
}
