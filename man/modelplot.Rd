% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelplot.R
\name{modelplot}
\alias{modelplot}
\title{Plot good of fitness multi-scale models}
\usage{
modelplot(x, criterion = NULL, plot = T)
}
\arguments{
\item{x}{the output of fitscale function}

\item{criterion}{a collumn name from the x$glance tibble.
By default the function looks for 'r.squared', 'AIC', 'BIC', and 'logLik', respectively.}

\item{plot}{a logical (defaut is TRUE), indicating whether to print the plots.}
}
\description{
this function takes the output from fitscales
and plot the good of fitness acording to a given criterion.
The criterion vary among model types, but any column from
broom::glance() function will works. The output is a tibble
with two new columns "plot.id" and "ggplot". The former holds
the ggplot output which can be edited with ggplot2 API.
}
\details{
By defaut the function plots the criterion by response and predictors.
When one has too many predictors, the plot might looks unreadable and filtering is
recomended. In addition, the function always highlights with balck dots
the p.values lower than 0.05 if such a column is summarized by the "broom"'s API.

This 'p.value' means that an specific model is different than NULL,
not different each other. For comparing models, users must perform further analysis.
Besides NA values are ploted but filled with red color.

Users are free to change any of theses features directlly in ggplot objecs from
ggplot column. It can be accessed by \code{myobject$ggplot[plot.id]} with 'plot.id' equal
to the desired plot id.

It's important to highlight that the ouputed tibble has the same data as inputed,
which is stored into the collumn "data" and can be unnested with the command:
\code{myobject \%>\% unnest(data)}

This function returns a ggplot2 object that might be fully customizable.
Users might find more details with ?broom::glance.
As an alternative, users may also extract any information
from models using \code{\link[=model.apply]{model.apply()}} function.
}
\examples{
\dontrun{
ls <- decouple(r,p,c(1000,2000,3000))
lsm <- calc_lsm(ls, c("pland","shdi"))
bio <- euglossini
mod <- fitscales(lsm, bio, "lm")
m.plot <- modelplot(mod, "r.squared", plot=F)
m.plot
}
}
\seealso{
\code{\link[=model.apply]{model.apply()}} \code{\link[=fitscales]{fitscales()}}
}
\author{
Wilson Frantine-Silva
}
